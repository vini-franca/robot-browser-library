name: Robot Framework Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install robotframework-browser

    - name: Install Playwright
      run: |
        python -m pip install playwright
        python -m playwright install
        python -m playwright install-deps
        
    - name: Initialize Browser Library
      run: rfbrowser init

    - name: Run Robot Framework Tests
      run: |
        pabot --processes 3 --testlevelsplit --outputdir results --variable BROWSER_MODE:true features/
      env:
        PLAYWRIGHT_BROWSERS_PATH: /ms-playwright
        BROWSER_TIMEOUT: "60 seconds"
        
    - name: Parse log for failures
      if: failure()
      run: |
        python3 << EOF
import xml.etree.ElementTree as ET

try:
    tree = ET.parse('results/output.xml')
    root = tree.getroot()

    for suite in root.findall('.//suite'):
        for test in suite.findall('.//test'):
            status = test.find('status')
            if status is not None and status.get('status') == 'FAIL':
                print(f"\n=== Failed Test: {test.get('name')} ===")
                
                # Procura mensagens de erro
                for msg in test.findall('.//msg'):
                    if msg.get('level') in ['ERROR', 'FAIL']:
                        print(f"Error Message: {msg.text}")
                
                # Tenta encontrar a keyword que falhou
                for kw in test.findall('.//kw'):
                    kw_status = kw.find('status')
                    if kw_status is not None and kw_status.get('status') == 'FAIL':
                        print(f"Failed Keyword: {kw.get('name')}")

except Exception as e:
    print(f"Error parsing XML: {e}")
EOF

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: robot-test-results
        path: |
          results/
          playwright-log.txt
          browser/
          results/browser/
          log.html
          output.xml
          report.html
          *.png
          *.webm
