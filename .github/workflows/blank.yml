name: Robot Framework Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Setup Browser Library
      run: |
        rfbrowser init
        playwright install chromium

    - name: Run Robot Framework Tests
      run: |
        pabot --processes 3 --testlevelsplit --outputdir results --variable BROWSER_MODE:true features/
      env:
        # Configurações recomendadas para execução headless com Playwright
        PLAYWRIGHT_BROWSERS_PATH: /ms-playwright
        BROWSER_TIMEOUT: "60 seconds"
        
    - name: Parse log for failures
      if: failure()
      run: |
        if [ -f "results/output.xml" ]; then
          echo "=== Test Execution Logs ==="
          python -c "
          from robot.api import ExecutionResult
          result = ExecutionResult('results/output.xml')
          for test in result.suite.all_tests:
              if test.status == 'FAIL':
                  print(f'\n=== Failed Test: {test.name} ===')
                  print(f'Message: {test.message}')
                  print('Full Log:')
                  for msg in test.body:
                      print(f'- {msg}')
          "
        fi

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: robot-test-results
        path: |
          results/
          playwright-log.txt
          browser/
          results/browser/
          log.html
          output.xml
          report.html
          *.png
          *.webm
